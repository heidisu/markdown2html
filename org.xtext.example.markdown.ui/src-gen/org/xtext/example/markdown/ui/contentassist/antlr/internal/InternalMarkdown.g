/*
 * generated by Xtext
 */
grammar InternalMarkdown;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.xtext.example.markdown.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.markdown.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.markdown.services.MarkdownGrammarAccess;

}

@parser::members {
 
 	private MarkdownGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MarkdownGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMarkdown
entryRuleMarkdown 
:
{ before(grammarAccess.getMarkdownRule()); }
	 ruleMarkdown
{ after(grammarAccess.getMarkdownRule()); } 
	 EOF 
;

// Rule Markdown
ruleMarkdown
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMarkdownAccess().getContentAssignment()); }
(rule__Markdown__ContentAssignment)*
{ after(grammarAccess.getMarkdownAccess().getContentAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContent
entryRuleContent 
:
{ before(grammarAccess.getContentRule()); }
	 ruleContent
{ after(grammarAccess.getContentRule()); } 
	 EOF 
;

// Rule Content
ruleContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContentAccess().getGroup()); }
(rule__Content__Group__0)
{ after(grammarAccess.getContentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextBlock
entryRuleTextBlock 
:
{ before(grammarAccess.getTextBlockRule()); }
	 ruleTextBlock
{ after(grammarAccess.getTextBlockRule()); } 
	 EOF 
;

// Rule TextBlock
ruleTextBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getTextBlockAccess().getTextAssignment()); }
(rule__TextBlock__TextAssignment)
{ after(grammarAccess.getTextBlockAccess().getTextAssignment()); }
)
(
{ before(grammarAccess.getTextBlockAccess().getTextAssignment()); }
(rule__TextBlock__TextAssignment)*
{ after(grammarAccess.getTextBlockAccess().getTextAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHeader1
entryRuleHeader1 
:
{ before(grammarAccess.getHeader1Rule()); }
	 ruleHeader1
{ after(grammarAccess.getHeader1Rule()); } 
	 EOF 
;

// Rule Header1
ruleHeader1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHeader1Access().getGroup()); }
(rule__Header1__Group__0)
{ after(grammarAccess.getHeader1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHeader2
entryRuleHeader2 
:
{ before(grammarAccess.getHeader2Rule()); }
	 ruleHeader2
{ after(grammarAccess.getHeader2Rule()); } 
	 EOF 
;

// Rule Header2
ruleHeader2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHeader2Access().getGroup()); }
(rule__Header2__Group__0)
{ after(grammarAccess.getHeader2Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlainText
entryRulePlainText 
:
{ before(grammarAccess.getPlainTextRule()); }
	 rulePlainText
{ after(grammarAccess.getPlainTextRule()); } 
	 EOF 
;

// Rule PlainText
rulePlainText
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlainTextAccess().getValueAssignment()); }
(rule__PlainText__ValueAssignment)
{ after(grammarAccess.getPlainTextAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleItalic
entryRuleItalic 
:
{ before(grammarAccess.getItalicRule()); }
	 ruleItalic
{ after(grammarAccess.getItalicRule()); } 
	 EOF 
;

// Rule Italic
ruleItalic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getItalicAccess().getAlternatives()); }
(rule__Italic__Alternatives)
{ after(grammarAccess.getItalicAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBold
entryRuleBold 
:
{ before(grammarAccess.getBoldRule()); }
	 ruleBold
{ after(grammarAccess.getBoldRule()); } 
	 EOF 
;

// Rule Bold
ruleBold
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoldAccess().getAlternatives()); }
(rule__Bold__Alternatives)
{ after(grammarAccess.getBoldAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Content__EntityAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentAccess().getEntityHeader1ParserRuleCall_0_0_0()); }
	ruleHeader1
{ after(grammarAccess.getContentAccess().getEntityHeader1ParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getContentAccess().getEntityHeader2ParserRuleCall_0_0_1()); }
	ruleHeader2
{ after(grammarAccess.getContentAccess().getEntityHeader2ParserRuleCall_0_0_1()); }
)

    |(
{ before(grammarAccess.getContentAccess().getEntityTextBlockParserRuleCall_0_0_2()); }
	ruleTextBlock
{ after(grammarAccess.getContentAccess().getEntityTextBlockParserRuleCall_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextBlock__TextAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextBlockAccess().getTextPlainTextParserRuleCall_0_0()); }
	rulePlainText
{ after(grammarAccess.getTextBlockAccess().getTextPlainTextParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getTextBlockAccess().getTextItalicParserRuleCall_0_1()); }
	ruleItalic
{ after(grammarAccess.getTextBlockAccess().getTextItalicParserRuleCall_0_1()); }
)

    |(
{ before(grammarAccess.getTextBlockAccess().getTextBoldParserRuleCall_0_2()); }
	ruleBold
{ after(grammarAccess.getTextBlockAccess().getTextBoldParserRuleCall_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItalicAccess().getGroup_0()); }
(rule__Italic__Group_0__0)
{ after(grammarAccess.getItalicAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getItalicAccess().getGroup_1()); }
(rule__Italic__Group_1__0)
{ after(grammarAccess.getItalicAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__ValueAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItalicAccess().getValuePlainTextParserRuleCall_0_1_0_0()); }
	rulePlainText
{ after(grammarAccess.getItalicAccess().getValuePlainTextParserRuleCall_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getItalicAccess().getValueBoldParserRuleCall_0_1_0_1()); }
	ruleBold
{ after(grammarAccess.getItalicAccess().getValueBoldParserRuleCall_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__Alternatives_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItalicAccess().getAsteriskKeyword_0_2_0()); }

	'*' 

{ after(grammarAccess.getItalicAccess().getAsteriskKeyword_0_2_0()); }
)

    |(
{ before(grammarAccess.getItalicAccess().getAsteriskSpaceKeyword_0_2_1()); }

	'* ' 

{ after(grammarAccess.getItalicAccess().getAsteriskSpaceKeyword_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__ValueAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItalicAccess().getValuePlainTextParserRuleCall_1_1_0_0()); }
	rulePlainText
{ after(grammarAccess.getItalicAccess().getValuePlainTextParserRuleCall_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getItalicAccess().getValueBoldParserRuleCall_1_1_0_1()); }
	ruleBold
{ after(grammarAccess.getItalicAccess().getValueBoldParserRuleCall_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoldAccess().getGroup_0()); }
(rule__Bold__Group_0__0)
{ after(grammarAccess.getBoldAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getBoldAccess().getGroup_1()); }
(rule__Bold__Group_1__0)
{ after(grammarAccess.getBoldAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__ValueAlternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoldAccess().getValuePlainTextParserRuleCall_0_1_0_0()); }
	rulePlainText
{ after(grammarAccess.getBoldAccess().getValuePlainTextParserRuleCall_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getBoldAccess().getValueItalicParserRuleCall_0_1_0_1()); }
	ruleItalic
{ after(grammarAccess.getBoldAccess().getValueItalicParserRuleCall_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__ValueAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoldAccess().getValuePlainTextParserRuleCall_1_1_0_0()); }
	rulePlainText
{ after(grammarAccess.getBoldAccess().getValuePlainTextParserRuleCall_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getBoldAccess().getValueItalicParserRuleCall_1_1_0_1()); }
	ruleItalic
{ after(grammarAccess.getBoldAccess().getValueItalicParserRuleCall_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Content__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Content__Group__0__Impl
	rule__Content__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentAccess().getEntityAssignment_0()); }
(rule__Content__EntityAssignment_0)
{ after(grammarAccess.getContentAccess().getEntityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Content__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Content__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getContentAccess().getNEWLINETerminalRuleCall_1()); }
(	RULE_NEWLINE)
{ after(grammarAccess.getContentAccess().getNEWLINETerminalRuleCall_1()); }
)
(
{ before(grammarAccess.getContentAccess().getNEWLINETerminalRuleCall_1()); }
(	RULE_NEWLINE)*
{ after(grammarAccess.getContentAccess().getNEWLINETerminalRuleCall_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Header1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Header1__Group__0__Impl
	rule__Header1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeader1Access().getNumberSignSpaceKeyword_0()); }

	'# ' 

{ after(grammarAccess.getHeader1Access().getNumberSignSpaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Header1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Header1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeader1Access().getValueAssignment_1()); }
(rule__Header1__ValueAssignment_1)
{ after(grammarAccess.getHeader1Access().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Header2__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Header2__Group__0__Impl
	rule__Header2__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header2__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeader2Access().getNumberSignNumberSignSpaceKeyword_0()); }

	'## ' 

{ after(grammarAccess.getHeader2Access().getNumberSignNumberSignSpaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Header2__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Header2__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header2__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeader2Access().getValueAssignment_1()); }
(rule__Header2__ValueAssignment_1)
{ after(grammarAccess.getHeader2Access().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Italic__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Italic__Group_0__0__Impl
	rule__Italic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItalicAccess().getAsteriskKeyword_0_0()); }

	'*' 

{ after(grammarAccess.getItalicAccess().getAsteriskKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Italic__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Italic__Group_0__1__Impl
	rule__Italic__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getItalicAccess().getValueAssignment_0_1()); }
(rule__Italic__ValueAssignment_0_1)
{ after(grammarAccess.getItalicAccess().getValueAssignment_0_1()); }
)
(
{ before(grammarAccess.getItalicAccess().getValueAssignment_0_1()); }
(rule__Italic__ValueAssignment_0_1)*
{ after(grammarAccess.getItalicAccess().getValueAssignment_0_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Italic__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Italic__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItalicAccess().getAlternatives_0_2()); }
(rule__Italic__Alternatives_0_2)
{ after(grammarAccess.getItalicAccess().getAlternatives_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Italic__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Italic__Group_1__0__Impl
	rule__Italic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItalicAccess().get_Keyword_1_0()); }

	'_' 

{ after(grammarAccess.getItalicAccess().get_Keyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Italic__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Italic__Group_1__1__Impl
	rule__Italic__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getItalicAccess().getValueAssignment_1_1()); }
(rule__Italic__ValueAssignment_1_1)
{ after(grammarAccess.getItalicAccess().getValueAssignment_1_1()); }
)
(
{ before(grammarAccess.getItalicAccess().getValueAssignment_1_1()); }
(rule__Italic__ValueAssignment_1_1)*
{ after(grammarAccess.getItalicAccess().getValueAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Italic__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Italic__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItalicAccess().get_Keyword_1_2()); }

	'_' 

{ after(grammarAccess.getItalicAccess().get_Keyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Bold__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bold__Group_0__0__Impl
	rule__Bold__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoldAccess().getAsteriskAsteriskKeyword_0_0()); }

	'**' 

{ after(grammarAccess.getBoldAccess().getAsteriskAsteriskKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bold__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bold__Group_0__1__Impl
	rule__Bold__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBoldAccess().getValueAssignment_0_1()); }
(rule__Bold__ValueAssignment_0_1)
{ after(grammarAccess.getBoldAccess().getValueAssignment_0_1()); }
)
(
{ before(grammarAccess.getBoldAccess().getValueAssignment_0_1()); }
(rule__Bold__ValueAssignment_0_1)*
{ after(grammarAccess.getBoldAccess().getValueAssignment_0_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bold__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bold__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoldAccess().getAsteriskAsteriskKeyword_0_2()); }

	'**' 

{ after(grammarAccess.getBoldAccess().getAsteriskAsteriskKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Bold__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bold__Group_1__0__Impl
	rule__Bold__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoldAccess().get__Keyword_1_0()); }

	'__' 

{ after(grammarAccess.getBoldAccess().get__Keyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bold__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bold__Group_1__1__Impl
	rule__Bold__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getBoldAccess().getValueAssignment_1_1()); }
(rule__Bold__ValueAssignment_1_1)
{ after(grammarAccess.getBoldAccess().getValueAssignment_1_1()); }
)
(
{ before(grammarAccess.getBoldAccess().getValueAssignment_1_1()); }
(rule__Bold__ValueAssignment_1_1)*
{ after(grammarAccess.getBoldAccess().getValueAssignment_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Bold__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Bold__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoldAccess().get__Keyword_1_2()); }

	'__' 

{ after(grammarAccess.getBoldAccess().get__Keyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Markdown__ContentAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMarkdownAccess().getContentContentParserRuleCall_0()); }
	ruleContent{ after(grammarAccess.getMarkdownAccess().getContentContentParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Content__EntityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentAccess().getEntityAlternatives_0_0()); }
(rule__Content__EntityAlternatives_0_0)
{ after(grammarAccess.getContentAccess().getEntityAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextBlock__TextAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextBlockAccess().getTextAlternatives_0()); }
(rule__TextBlock__TextAlternatives_0)
{ after(grammarAccess.getTextBlockAccess().getTextAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Header1__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeader1Access().getValueTEXTTerminalRuleCall_1_0()); }
	RULE_TEXT{ after(grammarAccess.getHeader1Access().getValueTEXTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Header2__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHeader2Access().getValueTEXTTerminalRuleCall_1_0()); }
	RULE_TEXT{ after(grammarAccess.getHeader2Access().getValueTEXTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlainText__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlainTextAccess().getValueTEXTTerminalRuleCall_0()); }
	RULE_TEXT{ after(grammarAccess.getPlainTextAccess().getValueTEXTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItalicAccess().getValueAlternatives_0_1_0()); }
(rule__Italic__ValueAlternatives_0_1_0)
{ after(grammarAccess.getItalicAccess().getValueAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Italic__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getItalicAccess().getValueAlternatives_1_1_0()); }
(rule__Italic__ValueAlternatives_1_1_0)
{ after(grammarAccess.getItalicAccess().getValueAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoldAccess().getValueAlternatives_0_1_0()); }
(rule__Bold__ValueAlternatives_0_1_0)
{ after(grammarAccess.getBoldAccess().getValueAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Bold__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoldAccess().getValueAlternatives_1_1_0()); }
(rule__Bold__ValueAlternatives_1_1_0)
{ after(grammarAccess.getBoldAccess().getValueAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_TEXT : ('a'..'\u00E5'|'A'..'\u00C5') (RULE_ID|RULE_WS|'!'|'?')+;

RULE_WS : (' '|'\t')+;

RULE_NEWLINE : '\r'? '\n';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;


